{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","users","useState","setTitle","setUserId","myTodos","setMyTodos","wrongUser","setWrongUser","action","method","onSubmit","event","preventDefault","trim","arr","sort","todo1","todo2","largestId","length","state","addTodo","htmlFor","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3210d17.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","interface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\n\ninterface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\ninterface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user?: User;\n}\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <article\n      data-id=\"1\"\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {/* <UserInfo todo={todo} key={todo.id} /> */}\n      {user && <UserInfo user={user} />}\n\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\n\ninterface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\ninterface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user?: User;\n}\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\ninterface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n}\n\ninterface User {\n  id: number;\n  name: string;\n  username: string;\n  email: string;\n}\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const users = [...usersFromServer];\n\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [myTodos, setMyTodos] = useState(todos);\n  const [wrongUser, setWrongUser] = useState(false);\n\n  const addTodo = () => {\n    const arr = myTodos.sort(\n      (todo1, todo2) => todo1.id - todo2.id,\n    );\n\n    const largestId = arr[arr.length - 1].id;\n\n    setMyTodos(state => (\n      [...state, {\n        id: largestId + 1,\n        title,\n        completed: false,\n        userId,\n        user: getUser(userId),\n      }]\n    ));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (title !== '' && userId === 0) {\n      setWrongUser(true);\n      setTitle(title);\n    } else if (title !== 'undefined' && userId !== 0 && title.trim() !== '') {\n      addTodo();\n      setTitle('');\n      setUserId(0);\n    } else if (title === '' || userId === 0) {\n      setTitle('undefined');\n      setWrongUser(true);\n    } else if (title.trim() === '') {\n      setTitle('undefined');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title === 'undefined' ? '' : title}\n            onChange={event => setTitle(event.target.value)}\n          />\n          {(title === 'undefined')\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"select\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"select\"\n            value={userId}\n            onChange={event => {\n              setUserId(Number(event.target.value));\n              setWrongUser(false);\n            }}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n            {users.map(({ id, name }) => {\n              return (\n                <option\n                  key={id}\n                  value={id}\n                >\n                  {name}\n                </option>\n              );\n            })}\n\n          </select>\n          {wrongUser\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={myTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}